# general settings
name: train_MYIR_scratch
model_type: MYModel
scale: 1
num_gpu: 1
manual_seed: 100
is_train: True
dist: False
cumulative_period: [96000, 408000 ]
# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_DefocusDeblur_DualPixel_16bit
#    dataroot_gt: /home/lab/code1/MYIR/datasets/DPDD1/val
#    dataroot_lqL: /home/lab/code1/MYIR/datasets/DPDD1/train/L
#    dataroot_lqR: /home/lab/code1/MYIR/datasets/DPDD1/train/R
#    dataroot_lqC: /home/lab/code1/MYIR/datasets/DPDD1/train/C
    dataroot_gt: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/train/DPDD/target_crops
    dataroot_lqL: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/train/DPDD/inputL_crops
    dataroot_lqR: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/train/DPDD/inputR_crops
    dataroot_lqC:  /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/train/DPDD/inputC_crops
#    dataroot_gt: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/train/target_crops
#    dataroot_lqL: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/train/inputL_crops
#    dataroot_lqR: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/train/inputR_crops
#    dataroot_lqC: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/train/inputC_crops
    filename_tmpl: '{}'
    io_backend:
      type: disk
    geometric_augs: true


    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
    ### -------------Progressive training--------------------------
    mini_batch_sizes: [ 8,8,8,8,1,1 ]             # Batch size per gpu
#    mini_batch_sizes: [ 1,1,1,1,1,1 ]             # Batch size per gpu
    iters: [ 92000,64000,48000,36000,36000,24000 ]
#    iters: [ 32000,32000,24000,18000,36000,24000 ]
    gt_size: 256   # Max patch size for progressive training
    gt_sizes: [128, 160, 192, 256, 256, 256]  # Patch sizes for progressive training.
#    gt_sizes: [256,256,256,256,256,256]  # Patch sizes for progressive training.
    ### ------------------------------------------------------------

  val:
    name: ValSet
    type: Dataset_DefocusDeblur_DualPixel_16bit
#    dataroot_gt: /home/lab/code1/MYIR/datasets/DPDD1/val
#    dataroot_lqL: /home/lab/code1/MYIR/datasets/DPDD1/train/L
#    dataroot_lqR: /home/lab/code1/MYIR/datasets/DPDD1/train/R
#    dataroot_lqC: /home/lab/code1/MYIR/datasets/DPDD1/train/C
    dataroot_gt: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/val/DPDD/target_crops
    dataroot_lqL: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/val/DPDD/inputL_crops
    dataroot_lqR: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/val/DPDD/inputR_crops
    dataroot_lqC: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/val/DPDD/inputC_crops
#    dataroot_gt: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/val/target_crops
#    dataroot_lqL: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/val/inputL_crops
#    dataroot_lqR: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/val/inputR_crops
#    dataroot_lqC: /home/lab/code1/Restomer/Defocus_Deblurring/Datasets/Downloads/DPDD/val/inputC_crops
    io_backend:
      type: disk

# network structures
network_g:
  type: Eff
  upscale: 1
  in_chans: 6
  embed_dim: 48
  num_heads: [2, 6, 12, 24,]
  depths: [2, 2, 6, 2]
  mlp_ratio: 2

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
#  resume_state: /home/lab/code1/IR/experiments/train_MYIR_scratch/training_states/80000.state
  resume_state: ~

# training settings
train:
  total_iter: 500000
  warmup_iter: -1  # no warm up
  use_grad_clip: true
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [ 0.9, 0.99 ]

  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [ 92000, 408000 ]
    restart_weights: [ 1,1 ]
    eta_mins: [ 0.0003,0.0003 ]

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1.0
    reduction: mean


# validation settings
val:
  val_freq: !!float 4e2
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 400
  save_checkpoint_freq: !!float 4e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
